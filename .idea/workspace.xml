<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="BackendCodeEditorMiscSettings">
    <option name="/Default/RiderDebugger/RiderRestoreDecompile/RestoreDecompileSetting/@EntryValue" value="false" type="bool" />
    <option name="/Default/Housekeeping/GlobalSettingsUpgraded/IsUpgraded/@EntryValue" value="true" type="bool" />
    <option name="/Default/Housekeeping/FeatureSuggestion/FeatureSuggestionManager/DisabledSuggesters/=SwitchToGoToActionSuggester/@EntryIndexedValue" value="true" type="bool" />
    <option name="/Default/Environment/Hierarchy/GeneratedFilesCacheKey/Timestamp/@EntryValue" value="3" type="long" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="VoxelEngine" targetName="glad" />
      <config projectName="VoxelEngine" targetName="voxel-engine" />
      <config projectName="VoxelEngine" targetName="sandbox" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
      <configuration PROFILE_NAME="Release" ENABLED="true" CONFIG_NAME="Release" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="50f23ade-4aeb-40a7-b7db-44e77969b14c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/.name" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/editor.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/voxels.iml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Scene/Scene.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/imgui.ini" beforeDir="false" afterPath="$PROJECT_DIR$/imgui.ini" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sandbox/assets/scripts/main.lua" beforeDir="false" afterPath="$PROJECT_DIR$/sandbox/assets/scripts/main.lua" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sandbox/src/SandboxApp.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/sandbox/src/SandboxApp.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sandbox/src/SandboxApp.h" beforeDir="false" afterPath="$PROJECT_DIR$/sandbox/src/SandboxApp.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Application.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Application.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Application.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Application.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Core/Utils/Logging.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Core/Utils/Logging.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ImGui/ImGuiLayer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/ImGui/ImGuiLayer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Renderer/Renderer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Renderer/Renderer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Renderer/Renderer.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Renderer/Renderer.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Scene/GameScene.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Scene/Scene.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Scene/Scene.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Scene/SceneManager.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Scene/SceneManager.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Scripting/LuaScriptSystem.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/Scripting/LuaScriptSystem.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Scripting/LuaScriptSystem.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/Scripting/LuaScriptSystem.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/TerrainSystem/TerrainSystem.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/TerrainSystem/TerrainSystem.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/TerrainSystem/TerrainSystem.h" beforeDir="false" afterPath="$PROJECT_DIR$/src/TerrainSystem/TerrainSystem.h" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Release" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="3.2" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="2sAIimO4jcU8IK4qi1CE9xMSOwt" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;CMake Application.Build all.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.Unnamed.executor&quot;: &quot;Run&quot;,
    &quot;CMake Application.sandbox.executor&quot;: &quot;Valgrind&quot;,
    &quot;CMake Debug.VoxelEngine.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.west.config.association.type.startup.service&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;Lua&quot;,
    &quot;last_opened_file_path&quot;: &quot;/home/glitch/CLionProjects/voxels&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="CMake Application.sandbox">
    <configuration name="VoxelEngine" type="CMakeListConfigurationType" factoryName="CMakeListConfigurationFactory" temporary="true">
      <method v="2" />
    </configuration>
    <configuration name="glad" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$USER_HOME$/voxels/build" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VoxelEngine" TARGET_NAME="glad" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sandbox" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$USER_HOME$/voxels/build" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VoxelEngine" TARGET_NAME="sandbox" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="VoxelEngine" RUN_TARGET_NAME="sandbox">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="voxel-engine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$USER_HOME$/voxels/build" PASS_PARENT_ENVS_2="true" PROJECT_NAME="VoxelEngine" TARGET_NAME="voxel-engine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="lua.app" factoryName="Lua Application">
      <option name="program" value="/usr/bin/lua" />
      <option name="file" value="" />
      <option name="workingDir" value="$PROJECT_DIR$/CMakeLists.txt" />
      <option name="debuggerType" value="2" />
      <option name="params" value="" />
      <option name="charset" value="UTF-8" />
      <option name="showConsole" value="true" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="CMake Debug.VoxelEngine" />
      <item itemvalue="CMake Application.glad" />
      <item itemvalue="CMake Application.sandbox" />
      <item itemvalue="CMake Application.voxel-engine" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="CMake Debug.VoxelEngine" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="50f23ade-4aeb-40a7-b7db-44e77969b14c" name="Changes" comment="" />
      <created>1737892081571</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1737892081571</updated>
      <workItem from="1737892082914" duration="4207000" />
      <workItem from="1738010703183" duration="1000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
</project>